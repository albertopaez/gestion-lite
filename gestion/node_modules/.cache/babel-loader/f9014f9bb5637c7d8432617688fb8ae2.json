{"ast":null,"code":"import _slicedToArray from \"/home/usuario/Escritorio/gestion-lite/gestion/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/usuario/Escritorio/gestion-lite/gestion/src/views/client/AddModal.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, FormGroup, Label, Input, Col } from 'reactstrap';\nimport axios from 'axios';\nimport { baseURL } from '../../constants';\nexport default function AddModal(props) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        price = _useState4[0],\n        setPrice = _useState4[1];\n\n  const _useState5 = useState(),\n        _useState6 = _slicedToArray(_useState5, 2),\n        tax = _useState6[0],\n        setTax = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        description = _useState8[0],\n        setDescription = _useState8[1];\n\n  const values = {\n    nombre: name,\n    precio: price,\n    iva: tax,\n    descripcion: description\n  };\n\n  function submit() {\n    axios.post(\"\".concat(baseURL, \"/clientes\"), values).then(response => {\n      console.log(response.data);\n      setName('');\n      setPrice();\n      setTax();\n      setDescription('');\n      props.getProductsProps();\n      props.showAddModalProps();\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  function showAddModal() {\n    props.getProductsProps();\n    props.showAddModalProps();\n  }\n\n  function showAddModal() {\n    props.showAddModalProps();\n    props.getClientsProps();\n  }\n\n  return React.createElement(Modal, {\n    isOpen: props.addModal,\n    toggle: showAddModal,\n    size: \"lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(ModalHeader, {\n    toggle: showAddModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"A\\xF1adir cliente: \"), React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Nombre: \", React.createElement(Input, {\n    id: \"name\",\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })), ' ', React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Apellidos: \", React.createElement(Input, {\n    type: \"text\",\n    id: \"surname\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), ' ', React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"NIF o NIE: \", React.createElement(Input, {\n    type: \"text\",\n    id: \"nif\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })), ' '), React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Localidad: \", React.createElement(Input, {\n    type: \"text\",\n    id: \"nif\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })), ' ', React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Direcci\\xF3n: \", React.createElement(Input, {\n    type: \"text\",\n    id: \"nif\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })), ' ', React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Tel\\xE9fono: \", React.createElement(Input, {\n    type: \"text\",\n    id: \"nif\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })), ' '), React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Fax: \", React.createElement(Input, {\n    type: \"text\",\n    id: \"nif\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })), ' ', React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Email: \", React.createElement(Input, {\n    type: \"text\",\n    id: \"nif\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })), ' '))), React.createElement(ModalFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    onClick: showAddModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"A\\xF1adir\"), ' ', React.createElement(Button, {\n    color: \"neutral\",\n    onClick: showAddModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Cancelar\"), ' '));\n}","map":{"version":3,"sources":["/home/usuario/Escritorio/gestion-lite/gestion/src/views/client/AddModal.js"],"names":["React","useState","useEffect","Button","Modal","ModalHeader","ModalBody","ModalFooter","FormGroup","Label","Input","Col","axios","baseURL","AddModal","props","name","setName","price","setPrice","tax","setTax","description","setDescription","values","nombre","precio","iva","descripcion","submit","post","then","response","console","log","data","getProductsProps","showAddModalProps","catch","error","showAddModal","getClientsProps","addModal"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, FormGroup, Label, Input, Col } from 'reactstrap';\nimport axios from 'axios'\nimport { baseURL } from '../../constants';\n\nexport default function AddModal(props) {\n\n\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState();\n  const [tax, setTax] = useState();\n  const [description, setDescription] = useState('');\n\n  const values = {\n    nombre: name,\n    precio: price,\n    iva: tax,\n    descripcion: description\n  };\n  \n  function submit() {\n    axios.post(`${baseURL}/clientes`, values)\n      .then(response => {\n        console.log(response.data);\n        setName('');\n        setPrice();\n        setTax();\n        setDescription('');\n        props.getProductsProps()\n        props.showAddModalProps()\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  function showAddModal() {\n    props.getProductsProps()\n    props.showAddModalProps()\n  }\n\n  function showAddModal() {\n    props.showAddModalProps()\n    props.getClientsProps()\n  }\n\n  return (\n    <Modal isOpen={props.addModal} toggle={showAddModal} size=\"lg\">\n      <ModalHeader toggle={showAddModal}>Añadir cliente: </ModalHeader>\n      <ModalBody>\n        <FormGroup>\n          <Col>\n            <Label >Nombre: <Input id=\"name\" type=\"text\"/></Label>{' '}\n            <Label>Apellidos: <Input type=\"text\" id=\"surname\"/></Label>{' '}\n            <Label>NIF o NIE: <Input type=\"text\" id=\"nif\"/></Label>{' '}\n          </Col>\n          <Col>\n            <Label>Localidad: <Input type=\"text\" id=\"nif\"/></Label>{' '}\n            <Label>Dirección: <Input type=\"text\" id=\"nif\"/></Label>{' '}\n            <Label>Teléfono: <Input type=\"text\" id=\"nif\"/></Label>{' '}\n          </Col>\n          <Col>\n            <Label>Fax: <Input type=\"text\" id=\"nif\"/></Label>{' '}\n            <Label>Email: <Input type=\"text\" id=\"nif\"/></Label>{' '}\n          </Col>\n        </FormGroup>\n      </ModalBody>\n      <ModalFooter>\n        <Button color=\"primary\" onClick={showAddModal} >Añadir</Button>{' '}\n        <Button color=\"neutral\" onClick={showAddModal}>Cancelar</Button>{' '}\n      </ModalFooter>\n    </Modal>\n  )\n\n}"]},"metadata":{},"sourceType":"module"}