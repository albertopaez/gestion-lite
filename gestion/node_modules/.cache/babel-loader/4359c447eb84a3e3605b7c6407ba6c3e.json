{"ast":null,"code":"import _defineProperty from \"/home/bartimeo/gestion-lite/gestion/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { LOAD_INVOICE_SUCCESS } from '../actionTypes/invoice';\nconst INITIAL_STATE = {\n  invoice: false // False means not fetched\n  // lastInseted: null\n\n};\nexport default function (state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case LOAD_INVOICE_SUCCESS:\n      return _objectSpread({}, state, {\n        invoice: action.payload.invoice\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n}","map":{"version":3,"sources":["/home/bartimeo/gestion-lite/gestion/src/reducers/invoice.js"],"names":["LOAD_INVOICE_SUCCESS","INITIAL_STATE","invoice","state","action","type","payload"],"mappings":";;;;;;AAAA,SACIA,oBADJ,QAES,wBAFT;AAIE,MAAMC,aAAa,GAAG;AACpBC,EAAAA,OAAO,EAAE,KADW,CACJ;AAChB;;AAFoB,CAAtB;AAKA,eAAe,UAAUC,KAAK,GAAGF,aAAlB,EAAiCG,MAAjC,EAAyC;AACtD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,oBAAL;AACE,+BACKG,KADL;AAEED,QAAAA,OAAO,EAAEE,MAAM,CAACE,OAAP,CAAeJ;AAF1B;;AAIF;AACE,+BACKC,KADL;AAPJ;AAWD","sourcesContent":["import {\n    LOAD_INVOICE_SUCCESS,\n  } from '../actionTypes/invoice';\n  \n  const INITIAL_STATE = {\n    invoice: false, // False means not fetched\n    // lastInseted: null\n  }\n  \n  export default function (state = INITIAL_STATE, action) {\n    switch (action.type) {\n      case LOAD_INVOICE_SUCCESS:\n        return {\n          ...state,\n          invoice: action.payload.invoice,\n        }\n      default:\n        return {\n          ...state,\n        }\n    }\n  }"]},"metadata":{},"sourceType":"module"}